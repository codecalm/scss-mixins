//
// Defaults
//
$base-font-size: 16px !default;

//
// Pixels to ems function
//
@function px2em($px) {
	@return ($px / $base-font-size) * 1em;
}


//
// Font size and line height mixin
//
@mixin font-size($font-size, $line-height: false) {
	font-size: px2em($font-size); /* #{$font-size} */

	@if $line-height != false {
		line-height: ($line-height / $font-size); /* #{$line-height} */
	}
}

//
// Right to left mixin
//
@mixin rtl {
	html[dir="rtl"] & {
		@content;
	}
}


//
// Feature mixin
//
@mixin feature($name) {
	body.#{$name} & {
		@content;
	}
}


//
// Media query mixin
//
$mq-breakpoints: (
	mobile:  320px,
	tablet:  740px,
	desktop: 980px,
	wide:    1300px
) !default;


@mixin mq($from, $and: false) {
	$media-query: '';
	$min-width: 0;

	@if type-of($from) == number {
		$min-width: px2em($from);
	} @else {
		$min-width: px2em(map-get($mq-breakpoints, $from));
	}

	@if $min-width != 0 {
		$media-query: '#{$media-query} and (min-width: #{$min-width})';
	}

	@if $and {
		$media-query: '#{$media-query} and #{$and}';
	}

	$media-query: str-slice(unquote($media-query), 6);

	@media #{$media-query} {
		@content;
	}
}

//
// Clearfix mixin
//
@mixin clearfixStyle {
	&::after {
		clear: both;
		content: "";
		display: table;
	}
}

%clearfix {
	@include clearfixStyle;
}

@mixin clearfix($extend: true) {
	@if($extend) {
		@extend %clearfix;
	} @else {
		@include clearfixStyle;
	}
}