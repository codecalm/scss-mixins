//
// Defaults
//
$base-font-size: 16px !default;

$all-text-inputs: 'input[type="color"]',
	'input[type="date"]',
	'input[type="datetime"]',
	'input[type="datetime-local"]',
	'input[type="email"]',
	'input[type="month"]',
	'input[type="number"]',
	'input[type="password"]',
	'input[type="search"]',
	'input[type="tel"]',
	'input[type="text"]',
	'input[type="time"]',
	'input[type="url"]',
	'input[type="week"]',
	'textarea' !default;

$all-buttons-list: 'button',
	'input[type="button"]',
	'input[type="reset"]',
	'input[type="submit"]';

//
// Pixels to ems function
//
@function px2em($px) {
	@return ($px / $base-font-size) * 1em;
}


//
// Font size and line height mixin
//
@mixin font-size($font-size, $line-height: false) {
	font-size: px2em($font-size); /* #{$font-size} */

	@if $line-height != false {
		line-height: ($line-height / $font-size); /* #{$line-height} */
	}
}

//
// Right to left mixin
//
@mixin rtl {
	html[dir="rtl"] & {
		@content;
	}
}


//
// Feature mixin
//
@mixin feature($name) {
	body.#{$name} & {
		@content;
	}
}


//
// Media query mixin
//
$mq-breakpoints: (
	mobile:  320px,
	tablet:  740px,
	desktop: 980px,
	wide:    1300px
) !default;


@mixin mq($from) {
	$media-query: '';
	$min-width: 0;

	@if type-of($from) == number {
		$min-width: px2em($from);
	} @else {
		$min-width: px2em(map-get($mq-breakpoints, $from));
	}

	@if $min-width != 0 {
		$media-query: '#{$media-query} and (min-width: #{$min-width})';
	}

	$media-query: str-slice(unquote($media-query), 6);

	@media #{$media-query} {
		@content;
	}
}

@mixin hidpi($ratio: 1.3) {
	@media only screen and (-webkit-min-device-pixel-ratio: $ratio),
	only screen and (min--moz-device-pixel-ratio: $ratio),
	only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
	only screen and (min-resolution: round($ratio * 96dpi)),
	only screen and (min-resolution: $ratio * 1dppx) {
		@content;
	}
}

//
// Clearfix mixin
//
@mixin clearfixStyle {
	&::after {
		clear: both;
		content: "";
		display: table;
	}
}

%clearfix {
	@include clearfixStyle;
}

@mixin clearfix($extend: true) {
	@if($extend) {
		@extend %clearfix;
	} @else {
		@include clearfixStyle;
	}
}


//
// Ellipsis mixin
//
@mixin ellipsis($width: 100%) {
	display: inline-block;
	max-width: $width;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

//
// Fluid type
//
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  & {
    @each $property in $properties {
      #{$property}: $min-value;
    }

    @media screen and (min-width: $min-vw) {
      @each $property in $properties {
        #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
      }
    }

    @media screen and (min-width: $max-vw) {
      @each $property in $properties {
        #{$property}: $max-value;
      }
    }
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
